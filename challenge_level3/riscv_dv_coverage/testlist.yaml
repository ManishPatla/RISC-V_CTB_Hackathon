- test: add_test
  description: Addition instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_add,1
  iterations: 1
  rtl_test: core_base_test

- test: sub_test
  description: Subtraction instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_sub,1
  iterations: 1
  rtl_test: core_base_test

- test: sll_test
  description: Shift left logical instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_sll,1
  iterations: 1
  rtl_test: core_base_test

- test: slt_test
  description: Set less than instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_slt,1
  iterations: 1
  rtl_test: core_base_test

- test: sltu_test
  description: Set less than unsigned instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_sltu,1
  iterations: 1
  rtl_test: core_base_test

- test: xor_test
  description: XOR instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_xor,1
  iterations: 1
  rtl_test: core_base_test

- test: srl_test
  description: Shift right logical instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_srl,1
  iterations: 1
  rtl_test: core_base_test

- test: sra_test
  description: Shift right arithmetic instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_sra,1
  iterations: 1
  rtl_test: core_base_test

- test: or_test
  description: OR instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_or,1
  iterations: 1
  rtl_test: core_base_test

- test: and_test
  description: AND instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_and,1
  iterations: 1
  rtl_test: core_base_test

- test: addi_test
  description: Addition immediate instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_addi,1
  iterations: 1
  rtl_test: core_base_test

- test: slti_test
  description: Set less than immediate instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_slti,1
  iterations: 1
  rtl_test: core_base_test

- test: sltiu_test
  description: Set less than immediate unsigned instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_sltiu,1
  iterations: 1
  rtl_test: core_base_test

- test: xori_test
  description: XOR immediate instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_xori,1
  iterations: 1
  rtl_test: core_base_test

- test: ori_test
  description: OR immediate instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_ori,1
  iterations: 1
  rtl_test: core_base_test

- test: andi_test
  description: AND immediate instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_andi,1
  iterations: 1
  rtl_test: core_base_test

- test: lui_test
  description: Load upper immediate instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_lui,1
  iterations: 1
  rtl_test: core_base_test

- test: auipc_test
  description: Add upper immediate to PC instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_auipc,1
  iterations: 1
  rtl_test: core_base_test

- test: jal_test
  description: Jump and link instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_jal,1
  iterations: 1
  rtl_test: core_base_test

- test: jalr_test
  description: Jump and link register instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_jalr,1
  iterations: 1
  rtl_test: core_base_test

- test: beq_test
  description: Branch if equal instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_beq,1
  iterations: 1
  rtl_test: core_base_test

- test: bne_test
  description: Branch if not equal instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_bne,1
  iterations: 1
  rtl_test: core_base_test

- test: blt_test
  description: Branch if less than instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_blt,1
  iterations: 1
  rtl_test: core_base_test

- test: bge_test
  description: Branch if greater than or equal instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_bge,1
  iterations: 1
  rtl_test: core_base_test

- test: bltu_test
  description: Branch if less than unsigned instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_bltu,1
  iterations: 1
  rtl_test: core_base_test

- test: bgeu_test
  description: Branch if greater than or equal unsigned instruction test
  gen_opts: >
    +instr_cnt=1
    +directed_instr_0=riscv_instr_bgeu,1
  iterations: 1
  rtl_test: core_base_test
